{"version":3,"sources":["services/filterOptions.js","components/filter-result/filter-result.js","components/filter-item/filter-item.js","components/filter-group/filter-group.js","components/filter-navigation/filter-navigation.js","logo.svg","App.js","index.js"],"names":["filterOptions","size","id","title","color","room","price","material","construction","style","FilterResult","checkedItemsArray","onRemoveChecked","onRemoveAllChecked","deleteClick","target","dataset","group","filteredItemsUI","clearAllButton","updateFilteredItemsUi","key","forEach","elem","push","groupName","className","data-group","data-id","onClick","e","filteredItemElement","length","Button","outline","FilterItem","itemId","onCheckItem","isChecked","itemClass","FilterGroup","onGroupSaveChanges","navItems","countChecked","isMobile","isForMobile","itemsList","useState","groupState","setGroupState","popoverOpen","setPopoverOpen","index","findIndex","before","slice","after","newItem","newArray","itemsArray","map","item","Date","getTime","togglePopover","closePopover","checkedItems","uniqueId","desktopItems","Popover","placement","isOpen","trigger","toggle","PopoverBody","mobileItems","Collapse","FilterNavigation","filters","moreItemsIsOpen","setMoreItemsIsOpen","listOfGroups","Object","keys","mobileItemsFull","mobileItemsSmall","iterator","generatedGroups","count","el","uniqueKey","App","updatedFilterArray","property","i","setFilters","savedCheckedItemsArray","filter","src","logo","alt","newItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAsQeA,EAtQO,CAClBC,KAAM,CACF,CACIC,GAAI,MACJC,MAAO,WAEX,CACID,GAAI,MACJC,MAAO,WAEX,CACID,GAAI,MACJC,MAAO,WAEX,CACID,GAAI,MACJC,MAAO,WAEX,CACID,GAAI,MACJC,MAAO,WAEX,CACID,GAAI,OACJC,MAAO,YAEX,CACID,GAAI,OACJC,MAAO,YAEX,CACID,GAAI,QACJC,MAAO,aAEX,CACID,GAAI,QACJC,MAAO,aAEX,CACID,GAAI,UACJC,MAAO,WACR,CACCD,GAAI,sBACJC,MAAO,4BAGfC,MAAO,CACH,CACIF,GAAI,OACJC,MAAO,QAEX,CACID,GAAI,QACJC,MAAO,SAEX,CACID,GAAI,UACJC,MAAO,WAEX,CACID,GAAI,SACJC,MAAO,UAEX,CACID,GAAI,QACJC,MAAO,SAEX,CACID,GAAI,OACJC,MAAO,QAEX,CACID,GAAI,MACJC,MAAO,OAEX,CACID,GAAI,QACJC,MAAO,SACR,CACCD,GAAI,QACJC,MAAO,cAEX,CACID,GAAI,SACJC,MAAO,UAEX,CACID,GAAI,QACJC,MAAO,SAEX,CACID,GAAI,OACJC,MAAO,QAEX,CACID,GAAI,SACJC,MAAO,WAGfE,KAAM,CACF,CACIH,GAAI,UACJC,MAAO,WACR,CACCD,GAAI,cACJC,MAAO,eAEX,CACID,GAAI,UACJC,MAAO,WAEX,CACID,GAAI,UACJC,MAAO,WAEX,CACID,GAAI,WACJC,MAAO,YAEX,CACID,GAAI,OACJC,MAAO,QAEX,CACID,GAAI,cACJC,MAAO,eAEX,CACID,GAAI,UACJC,MAAO,WAEX,CACID,GAAI,SACJC,MAAO,WAGfG,MAAO,CACH,CACIJ,GAAI,aACJC,MAAO,UAEX,CACID,GAAI,eACJC,MAAO,YAEX,CACID,GAAI,eACJC,MAAO,YAEX,CACID,GAAI,UACJC,MAAO,iBAGfI,SAAU,CACN,CACIL,GAAI,aACJC,MAAO,cAEX,CACID,GAAI,wBACJC,MAAO,yBAEX,CACID,GAAI,OACJC,MAAO,QAEX,CACID,GAAI,SACJC,MAAO,UAEX,CACID,GAAI,SA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","file":"static/js/main.97081308.chunk.js","sourcesContent":["const filterOptions = {\n    size: [\n        {\n            id: \"2x3\",\n            title: \"2' X 3'\",\n        },\n        {\n            id: \"3x5\",\n            title: \"3' X 5'\",\n        },\n        {\n            id: \"4x6\",\n            title: \"4' X 6'\",\n        },\n        {\n            id: \"5x8\",\n            title: \"5' X 8'\",\n        },\n        {\n            id: \"6x9\",\n            title: \"6' X 9'\",\n        },\n        {\n            id: \"8x10\",\n            title: \"8' X 10'\",\n        },\n        {\n            id: \"9x12\",\n            title: \"9' X 12'\",\n        },\n        {\n            id: \"10x14\",\n            title: \"10' X 14'\",\n        },\n        {\n            id: \"12x15\",\n            title: \"12' X 15'\",\n        },\n        {\n            id: \"runners\",\n            title: \"Runners\",\n        }, {\n            id: \"roundsovals&squares\",\n            title: \"Rounds, Ovals & Squares\",\n        }\n    ],\n    color: [\n        {\n            id: \"blue\",\n            title: \"Blue\"\n        },\n        {\n            id: \"black\",\n            title: \"Black\"\n        },\n        {\n            id: \"neutral\",\n            title: \"Neutral\"\n        },\n        {\n            id: \"orange\",\n            title: \"Orange\"\n        },\n        {\n            id: \"white\",\n            title: \"White\"\n        },\n        {\n            id: \"gray\",\n            title: \"Gray\"\n        },\n        {\n            id: \"red\",\n            title: \"Red\"\n        },\n        {\n            id: \"brown\",\n            title: \"Brown\"\n        }, {\n            id: \"multi\",\n            title: \"Multicolor\",\n        },\n        {\n            id: \"yellow\",\n            title: \"Yellow\",\n        },\n        {\n            id: \"green\",\n            title: \"Green\",\n        },\n        {\n            id: \"pink\",\n            title: \"Pink\"\n        },\n        {\n            id: \"purple\",\n            title: \"Purple\"\n        },\n    ],\n    room: [\n        {\n            id: \"bedroom\",\n            title: \"Bedroom\"\n        }, {\n            id: \"living room\",\n            title: \"Living Room\"\n        },\n        {\n            id: \"hallway\",\n            title: \"Hallway\"\n        },\n        {\n            id: \"kitchen\",\n            title: \"Kitchen\"\n        },\n        {\n            id: \"bathroom\",\n            title: \"Bathroom\"\n        },\n        {\n            id: \"kids\",\n            title: \"Kids\"\n        },\n        {\n            id: \"dining room\",\n            title: \"Dining Room\"\n        },\n        {\n            id: \"outdoor\",\n            title: \"Outdoor\"\n        },\n        {\n            id: \"office\",\n            title: \"Office\"\n        },\n    ],\n    price: [\n        {\n            id: \"from0to100\",\n            title: \"$0-100\",\n        },\n        {\n            id: \"from101to300\",\n            title: \"$101-300\",\n        },\n        {\n            id: \"from301to700\",\n            title: \"$301-700\",\n        },\n        {\n            id: \"from701\",\n            title: \"$701 & above\",\n        },\n    ],\n    material: [\n        {\n            id: \"synthetics\",\n            title: \"Synthetics\"\n        },\n        {\n            id: \"jute & natural fibers\",\n            title: \"Jute & Natural Fibers\"\n        },\n        {\n            id: \"wool\",\n            title: \"Wool\",\n        },\n        {\n            id: \"blends\",\n            title: \"Blends\",\n        },\n        {\n            id: \"cotton\",\n            title: \"Cotton\",\n        },\n    ],\n    construction: [\n        {\n            id: \"machine made\",\n            title: \"Machine Made\"\n        },\n        {\n            id: \"hand woven\",\n            title: \"Hand Woven\"\n        },\n        {\n            id: \"hand knotted\",\n            title: \"Hand Knotted\"\n        },\n        {\n            id: \"hand tufted\",\n            title: \"Hand Tufted\"\n        },\n        {\n            id: \"hand hooked\",\n            title: \"Hand Hooked\"\n        },\n        {\n            id: \"shag\",\n            title: \"Shag\"\n        },\n        {\n            id: \"dhurrie\",\n            title: \"Dhurrie\"\n        },\n        {\n            id: \"hand loomed\",\n            title: \"Hand Loomed\"\n        },\n    ],\n    style: [\n        {\n            id: \"casual\",\n            title: \"Casual\"\n        },\n        {\n            id: \"contemporary\",\n            title: \"Contemporary\"\n        },\n        {\n            id: \"southwestern\",\n            title: \"Southwestern\"\n        },\n        {\n            id: \"moroccan\",\n            title: \"Moroccan\"\n        },\n        {\n            id: \"transitional\",\n            title: \"Transitional\"\n        },\n        {\n            id: \"modern\",\n            title: \"Modern\"\n        },\n        {\n            id: \"shag\",\n            title: \"Shag\"\n        },\n        {\n            id: \"boho&bohemian\",\n            title: \"Boho/Bohemian\"\n        },\n        {\n            id: \"traditional\",\n            title: \"Traditional\"\n        },\n        {\n            id: \"vintage\",\n            title: \"Vintage\"\n        },\n        {\n            id: \"updated traditional\",\n            title: \"Updated Traditional\"\n        },\n        {\n            id: \"kilim&tribal\",\n            title: \"Kilim/Tribal\"\n        }\n    ],\n}\n\nexport default filterOptions;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {Button} from \"reactstrap\";\nimport './filter-result.scss';\n\nfunction FilterResult({checkedItemsArray = {},\n                          onRemoveChecked = ()=>{},\n                          onRemoveAllChecked = ()=>{}}) {\n\n    const filteredItemElement = (groupName ,{title, id}) => {\n        return (\n            <div key={id} className=\"filtered-item\" data-group={groupName} data-id={id}>\n                {title}\n                <button className=\"delete\"\n                      onClick={(e) => deleteClick(e)}\n                      data-group={groupName}\n                      data-id={id}\n                >✕</button>\n            </div>\n        )\n    }\n\n    const deleteClick = ({target: {dataset: {group, id}}}) => {\n        onRemoveChecked(group, id)\n    }\n\n    //generate filtered items UI\n    let filteredItemsUI = [];\n    let clearAllButton = \"\";\n    const updateFilteredItemsUi = (key) => {\n        checkedItemsArray[key].forEach(elem => {\n            filteredItemsUI.push(filteredItemElement(key, elem));\n        })\n    }\n    for(let key in checkedItemsArray) {\n        updateFilteredItemsUi(key);\n    }\n\n    //make user to know that nothing was applied\n    if (filteredItemsUI.length === 0) {\n        filteredItemsUI = \"-none-\";\n    } else {\n        clearAllButton = <Button color=\"danger\" outline className=\"clear-all-btn\" onClick={() => onRemoveAllChecked()}>Clear All</Button>\n    }\n\n    return(\n        <div className='filter-result'>\n            Applied Filters:\n            <div className=\"results-wrapper\">\n                {filteredItemsUI}\n            </div>\n            {clearAllButton}\n        </div>\n    )\n}\n\nFilterResult.propTypes = {\n    checkedItemsArray : PropTypes.object,\n    onRemoveChecked : PropTypes.func,\n    onRemoveAllChecked : PropTypes.func,\n}\n\nexport default FilterResult;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport './filter-item.scss';\n\nfunction FilterItem({itemId=0, title=\"empty\", onCheckItem = ()=>{}, isChecked = false}) {\n    let itemClass = \"filter-item\";\n\n    if(isChecked) {\n        itemClass += \" checked \";\n    }\n\n    return(\n        <div className={itemClass} onClick={() => {onCheckItem(itemId)}}>\n            {title}\n        </div>\n    )\n}\n\nFilterItem.propTypes = {\n    itemId : PropTypes.string,\n    title : PropTypes.string,\n    onCheckItem : PropTypes.func,\n    isChecked : PropTypes.bool,\n}\n\nexport default FilterItem;","import React, {useState} from \"react\";\nimport FilterItem from \"../filter-item/filter-item\";\nimport PropTypes from 'prop-types';\nimport { Button, Popover, PopoverBody, Collapse } from 'reactstrap';\nimport './filter-group.scss';\n\nfunction FilterGroup({onGroupSaveChanges = ()=>{},\n                         groupName = \"empty\",\n                         navItems=[],\n                         countChecked = 0,\n                         isMobile=false,\n                         isForMobile=false}) {\n    const itemsList = [...navItems];\n    const [groupState, setGroupState] = useState(itemsList);\n    const [popoverOpen, setPopoverOpen] = useState(false);\n\n    //when user click on item, but still not apply\n    const onCheckItem = (id) => {\n        const index = groupState.findIndex(elem => elem.id === id),\n              before = groupState.slice(0, index),\n              after = groupState.slice(index + 1),\n              newItem = {...groupState[index]};\n        //change status of changed item\n        newItem.isChecked = !newItem.isChecked;\n\n        const newArray = [...before, newItem, ...after];\n        setGroupState(newArray)\n    }\n\n    //generate items\n    const itemsArray = groupState.map((item) => {\n        return(\n            <FilterItem\n                key={item.id + new Date().getTime()}\n                itemId={item.id}\n                title={item.title}\n                isChecked={item.isChecked}\n                onCheckItem={onCheckItem}/>\n        )\n    })\n\n    const togglePopover = () => {\n        setPopoverOpen(!popoverOpen);\n        if(popoverOpen) {\n            setGroupState([...navItems]);\n        }\n    }\n\n    const closePopover = () => {\n        setPopoverOpen(false);\n        setGroupState([...navItems]);\n    }\n\n    //text for showing count of checked and applied items\n    const checkedItems = countChecked > 0 ? `(${countChecked})` : '';\n\n    const uniqueId = `popover-${groupName}-${isForMobile}`;\n\n    const desktopItems = <div className='filter-group'>\n        <Button id={ uniqueId }>\n            {groupName} {checkedItems}\n        </Button>\n        <Popover placement=\"bottom\"\n                 isOpen={ popoverOpen }\n                 target={ uniqueId }\n                 trigger=\"legacy\"\n                 toggle={ () => togglePopover() }>\n            <PopoverBody>\n                <div className=\"items-wrapper\">\n                    {itemsArray}\n                </div>\n                <div className=\"buttons-wrapper\">\n                    <Button outline color=\"danger\" onClick={() => closePopover()}>Cancel</Button>\n                    <Button outline color=\"success\" onClick={() => {\n                        onGroupSaveChanges(groupName, groupState);\n                    }}>\n                        Apply\n                    </Button>\n                </div>\n            </PopoverBody>\n        </Popover>\n    </div>\n\n    const mobileItems = <div className=\"filter-group-mobile\">\n            <button className=\"mobile-collapse-toggle\" onClick={()=>togglePopover()}>\n                {groupName} {checkedItems}\n                <span>{popoverOpen ? \"-\" : \"+\"}</span>\n            </button>\n            <Collapse isOpen={popoverOpen}>\n                <div className=\"items-wrapper\">\n                    {itemsArray}\n                </div>\n                <div className=\"buttons-wrapper\">\n                    <Button outline color=\"danger\" onClick={() => closePopover()}>Cancel</Button>\n                    <Button outline color=\"success\" onClick={() => {\n                        onGroupSaveChanges(groupName, groupState);\n                    }}>\n                        Apply\n                    </Button>\n                </div>\n            </Collapse>\n        </div>\n\n    return(\n        <>\n            {isMobile ? mobileItems : desktopItems}\n        </>\n    )\n}\n\nFilterGroup.propTypes = {\n    onGroupSaveChanges : PropTypes.func,\n    groupName : PropTypes.string,\n    navItems : PropTypes.array,\n    countChecked : PropTypes.number,\n    isMobile: PropTypes.bool,\n    isForMobile: PropTypes.bool\n};\n\nexport default FilterGroup;","import React, {useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport \"./filter-navigation.scss\";\nimport FilterGroup from \"../filter-group/filter-group\";\nimport {Button, Popover, PopoverBody} from \"reactstrap\";\n\nfunction FilterNavigation({filters = {},\n                              onGroupSaveChanges = ()=>{}}) {\n    const [moreItemsIsOpen, setMoreItemsIsOpen] = useState(false);\n    //generate group items\n    const listOfGroups = Object.keys(filters);\n    let mobileItemsFull = [];\n    let mobileItemsSmall = [];\n    let iterator = 0;\n    const generatedGroups = listOfGroups.map((item) => {\n        let count = 0;\n        iterator++;\n        filters[item].forEach(el => {\n            if(el.isChecked) {\n                count++;\n            }\n        })\n        const uniqueKey = item + new Date().getTime();\n\n        //mobile nav\n        if(iterator <= 2) {\n            //push first full items\n            mobileItemsFull.push(<FilterGroup key={uniqueKey + \"mobile\"}\n                                          groupName={item}\n                                          onGroupSaveChanges={onGroupSaveChanges}\n                                          navItems={[...filters[item]]}\n                                          countChecked={count}\n                                          isMobile={false}\n                                          isForMobile={true}/>)\n        } else {\n            //push sub nav\n            mobileItemsSmall.push(<FilterGroup key={uniqueKey + \"mobile2\"}\n                                          groupName={item}\n                                          onGroupSaveChanges={onGroupSaveChanges}\n                                          navItems={[...filters[item]]}\n                                          countChecked={count}\n                                          isMobile={true}\n                                          isForMobile={true}/>)\n        }\n\n        //desktop nav\n        return <FilterGroup key={uniqueKey}\n                            groupName={item}\n                            onGroupSaveChanges={onGroupSaveChanges}\n                            navItems={[...filters[item]]}\n                            countChecked={count}\n                            isMobile={false}/>\n    });\n\n    const togglePopover = () => {\n        setMoreItemsIsOpen(!moreItemsIsOpen);\n    }\n\n    mobileItemsFull.push(<div key={\"popover-wrapper\"}>\n        <Button id={ `popover-more-items-popover` }>\n            More Filters\n        </Button>\n        <Popover placement=\"bottom\"\n                 isOpen={ moreItemsIsOpen }\n                 target={ `popover-more-items-popover` }\n                 trigger=\"legacy\"\n                 toggle={ () => togglePopover() }>\n            <PopoverBody>\n                {mobileItemsSmall}\n            </PopoverBody>\n        </Popover>\n    </div>)\n\n    return(\n        <nav className=\"filter-navigation\">\n            <div className=\"desktop-nav\">\n                {generatedGroups}\n            </div>\n            <div className=\"mobile-nav\">\n                {mobileItemsFull}\n            </div>\n        </nav>\n    )\n}\n\nFilterNavigation.propTypes = {\n    filters : PropTypes.object,\n    onGroupSaveChanges : PropTypes.func\n}\n\nexport default FilterNavigation;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from \"react\";\nimport filterOptions from \"./services/filterOptions\";\nimport FilterResult from \"./components/filter-result/filter-result\";\nimport FilterNavigation from \"./components/filter-navigation/filter-navigation\";\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n    let updatedFilterArray = {};\n        //add isChecked status for each item and set to false by default\n    for (const property in filterOptions) {\n        updatedFilterArray[property] = [];\n        filterOptions[property].forEach((el, i) => {\n            updatedFilterArray[property].push({\n                ...el,\n                isChecked: false\n            })\n        })\n    }\n\n    const [filters, setFilters] = useState({...updatedFilterArray});\n\n    //save group event\n    const onGroupSaveChanges = (group, newItems) => {\n        let newArray = {...filters};\n        newArray[group] = newItems;\n        setFilters(newArray);\n    }\n\n    //generate list of checked items\n    let savedCheckedItemsArray = {...filters};\n    for ( const key in savedCheckedItemsArray) {\n        savedCheckedItemsArray[key] = savedCheckedItemsArray[key].filter(el => el.isChecked === true);\n    }\n\n    //event for remove item from \"checked and approved\" list\n    const onRemoveChecked = (groupName, id) => {\n        let newArray = {...filters};\n        const index = newArray[groupName].findIndex(el => el.id === id);\n        newArray[groupName][index].isChecked = false;\n        setFilters(newArray);\n    }\n\n    //event for remove all checked items\n    const onRemoveAllChecked = () => {\n        let newArray = {...filters};\n        for ( const key in newArray ) {\n            newArray[key].forEach((item, index) => {\n                if(item.isChecked) {\n                    newArray[key][index].isChecked = false;\n                }\n            })\n        }\n        setFilters(newArray);\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n            </header>\n            <nav className=\"groups-nav-wrapper\">\n                <FilterNavigation filters={{...filters}} onGroupSaveChanges={onGroupSaveChanges}/>\n            </nav>\n            <FilterResult onRemoveChecked={onRemoveChecked}\n                          checkedItemsArray={savedCheckedItemsArray}\n                          onRemoveAllChecked={onRemoveAllChecked}/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}